<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.stazxr.zblog.mapper.AlbumPhotoMapper">
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT INTO album_photo (ID, ALBUM_ID, FILE_ID, PHOTO_NAME, PHOTO_LINK, IS_DELETED, VERSION, CREATE_USER, CREATE_TIME, CREATE_DATE) VALUES
        <foreach collection="photos" item="photo" index="index" separator=",">
            (#{photo.id}, #{photo.albumId}, #{photo.fileId}, #{photo.photoName}, #{photo.photoLink}, #{photo.isDeleted}, 1, #{photo.createUser}, #{photo.createTime}, #{photo.createDate})
        </foreach>
    </insert>

    <update id="deleteAlbumPhoto">
        UPDATE album_photo SET IS_DELETED = 1 WHERE ID IN
        <foreach collection="photoIdList" item="photoId" index="index" open="(" separator="," close=")">
            #{photoId}
        </foreach>
    </update>

    <update id="moveAlbumPhoto">
        UPDATE album_photo SET ALBUM_ID = #{albumId} WHERE ID IN
        <foreach collection="photoIdList" item="photoId" index="index" open="(" separator="," close=")">
            #{photoId}
        </foreach>
    </update>

    <update id="recoverAlbumPhoto">
        UPDATE album_photo SET IS_DELETED = 0 WHERE ID IN
        <foreach collection="photoIdList" item="photoId" index="index" open="(" separator="," close=")">
            #{photoId}
        </foreach>
    </update>

    <select id="selectAlbumPhotoList" resultType="com.github.stazxr.zblog.domain.vo.AlbumPhotoVo">
        SELECT
            ID, ALBUM_ID, PHOTO_NAME, PHOTO_LINK, CREATE_DATE
        FROM album_photo WHERE IS_DELETED = 0
        <if test="albumId != null">
            AND ALBUM_ID = #{albumId}
        </if>
        ORDER BY CREATE_TIME DESC
    </select>

    <select id="selectDeletePhotoList" resultType="com.github.stazxr.zblog.domain.vo.AlbumPhotoVo">
        SELECT
            ap.ID, ap.ALBUM_ID, ap.PHOTO_NAME, ap.PHOTO_LINK, ap.CREATE_DATE, a.ALBUM_NAME
        FROM album_photo ap
        LEFT JOIN album a ON a.ID = ap.ALBUM_ID
        WHERE ap.IS_DELETED = 1 AND a.DELETED = 0 AND ap.CREATE_USER = (
            SELECT USERNAME FROM user WHERE ID = #{userId}
        )
        ORDER BY ap.CREATE_TIME DESC
    </select>
</mapper>
