server:
  port: ${SERVER_PORT:8081} # 应用端口
spring:
  application:
    name: ${APP_NAME:zblog} # 应用名称
  main:
    allow-bean-definition-overriding: false # 是否允许覆盖BEAN
  datasource:
    druid:
      driver-class-name: ${zblog.db.DbDriver} # 数据源驱动
      url: ${zblog.db.DbUrl} # 数据库连接 URL
      username: ${zblog.db.DbUser} # 数据库用户名
      password: ${zblog.db.DbPass} # 数据库密码
      initial-size: 5 # 连接池的初始连接数
      min-idle: 15 # 连接池的最小连接数
      max-active: 30 # 连接池的最大连接数
      max-wait: 10000 # 连接池的最大等待时间（毫秒）
      remove-abandoned-timeout: 180 # 连接在被视为可回收之前需要空闲的最长时间（以秒数为单位）
      time-between-eviction-runs-millis: 180000 # 空闲连接清理任务的运行间隔时间（毫秒）
      max-evictable-idle-time-millis: 900000 # 连接池的最大生存时间（毫秒）
      min-evictable-idle-time-millis: 300000 # 连接池的最小生存时间（毫秒）
      validation-query: select 1 # 检测连接是否有效
      test-on-borrow: true # 指明是否在从池中取出连接前进行检验, 如果检验失败, 则从池中去除连接并尝试取出另一个
      test-while-idle: true # 指明连接是否被空闲连接回收器（如果有）进行检验. 如果检测失败, 则连接将被从池中去除
      test-on-return: false # 是否在归还到池中前进行检验
      stat-view-servlet:
        enabled: true # 启用 Druid 监控功能
        url-pattern: /api/druid/* # 配置监控界面的 URL 映射
        reset-enable: true # 是否可以重置统计信息
        # login-username: admin # 控制台登录用户 bugs 20240730 登录页面访问不到
        # login-password: admin # 控制台登录密码
        allow: # 允许访问监控界面的 IP（可以配置多个 IP，用逗号分隔）
        deny: # 禁止访问监控界面的 IP（优先于 allow）
      web-stat-filter:
        enabled: true # 启用统计和监控 Web 应用程序的请求和响应数据
        url-pattern: /api/* # 配置监控的 URL 映射
        exclusions: '*.js,*.gif,*.jpg,*.png,*.ico,/api/druid/*' # 设置不需要统计的 URL
      filter:
        stat: # 用于 SQL 执行的统计和监控，提供 SQL 执行时间、慢查询等信息的记录
          enabled: true
          log-slow-sql: true # 打印慢SQL
          slow-sql-millis: 5000 # 慢SQL阙值（单位秒）
          merge-sql: true # 合并 SQL 查询
        wall: # 用于 SQL 安全控制，防止 SQL 注入和管理 SQL 执行权限
          enabled: true
          config:
            drop-table-allow: false # 不允许删除表
            multi-statement-allow: false # 指定是否允许在一个 Statement 对象中执行多个 SQL 语句
  redis:
    database: ${zblog.redis.database} # 指定 Redis 使用的数据库索引，Redis 默认有 16 个数据库，索引从 0 到 15
    host: ${zblog.redis.host} # Redis 服务器地址
    port: ${zblog.redis.port} # Redis 服务器的端口号
    password: ${zblog.redis.password} # Redis 服务器的密码
    connect-timeout: ${zblog.redis.connect.timeout} # 连接超时时间，单位为毫秒，用于定义客户端连接到 Redis 服务器的最大等待时间
    client-type: lettuce
    lettuce:
      pool:
        # 连接池中保持的最小空闲连接数
        min-idle: ${zblog.redis.lettuce.pool.minIdle}
        # 连接池中允许的最大空闲连接数
        max-idle: ${zblog.redis.lettuce.pool.maxIdle}
        # 连接池中允许的最大活动连接数，如果活动连接数超过此值，将会有新的连接请求被阻塞或抛出异常
        max-active: ${zblog.redis.lettuce.pool.maxActive}
        # 从连接池中获取连接时的最大等待时间，单位为毫秒。如果超过此时间仍未获取到连接，将会抛出异常
        max-wait: ${zblog.redis.lettuce.pool.maxWait}
        # 连接池中连接的清理周期，单位为毫秒。用于定义多长时间执行一次空闲连接的检查和清理，以保持连接池的健康
        time-between-eviction-runs: ${zblog.redis.lettuce.pool.timeBetweenEvictionRuns}

  web:
    resources:
      add-mappings: false
  mvc:
    throw-exception-if-no-handler-found: true
  freemarker:
    check-template-location: false
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .ftl
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 100MB
      location: /tmp/zblog_upload_tmp
  mail:
    host: ${zblog.email.host} # 邮箱服务器
    port: ${zblog.email.port} # 邮箱服务器端口 25/465/587
    username: ${zblog.email.username} # 邮箱用户
    password: ${zblog.email.password} # 邮箱授权码（非登录密码）
    properties:
      mail:
        smtp:
          auth: true
          ssl: # 465
            enable: true # 启用 SSL/TLS 加密
            required: true # 所有与 SMTP 服务器的连接是否都必须使用 SSL/TLS 加密
          # starttls: # 587
            # enable: true # 启用 STARTTLS 协议。如果服务器支持 STARTTLS，这将会启用加密连接
            # required: true # 强制要求使用 STARTTLS 协议。如果 SMTP 服务器不支持 STARTTLS，连接将失败
mybatis:
  configuration-properties:
    close-implicitly: true
mybatis-plus:
  mapper-locations: classpath*:mapper/**/*.xml
  configuration:
    map-underscore-to-camel-case: true
  global-config:
    db-config:
      logic-delete-value: true
      logic-not-delete-value: false
jwt:
  access-token-duration: 1800
  refresh-token-duration: 43200
  allowed-renew-token: true
  refresh-min-duration: 600
  max-version: 10
  algorithm: RS256
  cert-info:
    alias: zblog
    key-password: 123456
    cert-location: zblog.jks
  claims:
    issuer: http://localhost:${server.port}
    audience: all
    subject: user
swagger:
  config:
    enable: true
    title: Z-BLOG 接口文档
    description: Z-BLOG 是一款基于 MIT 协议的前后端分离博客框架，同时也可用作为前后端分离脚手架，快速进行项目搭建，仓库链接：https://github.com/stazxr/zblog
    base-package: com.github.stazxr.zblog
    server-url: https://www.suntaoblog.com
    version: V_4.0.0
    contact:
      name: 孙涛
      email: stazxr@qq.com
      url: https://www.suntaoblog.com
zblog:
  base:
    header: # 请求头配置
      sys-code: ST # 系统编码
      app-code: ZBLOG # 应用编码
      deploy:
        deploy-area: bj # 部署地域
        deploy-center: j # 部署机房
        deploy-unit: 0 # 部署单元
        deploy-ip: # 部署IP
    context: # 上下文配置
      tags: # 自定义标签配置
        - { tag-name: conversion-id } # conversion-id
    seq: # 序号配置
      datacenter-id: 0 # 数据中心ID
      machine-id: 0 # 机器ID
    cache:
      type: memory # 全局缓存类型
    file:
      model: 1 # 文件上传模式：1-本地；2-阿里云；3-七牛云
      local:
        base-url: http://localhost:${server.port}/file/
        file-upload-path: /home/${spring.application.name}/file/upload/
    log:
      control:
        enabled: true # 开启全局请求响应日志打印
        model: 0 # 默认值，paths 为允许记录日志的路径列表
        paths:
  # TODO 待替换
  base-package: com.github.stazxr.zblog
  file-base-url: http://localhost:${server.port}/file/
  file-upload-path: /home/${spring.application.name}/file/upload/
  file-domain: /file/**
  file-upload-type: 1
