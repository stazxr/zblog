<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.stazxr.zblog.base.mapper.UserMapper">
    <resultMap id="userVoDetailMap" type="com.github.stazxr.zblog.base.domain.vo.UserVo">
        <result property="id" column="ID" />
        <result property="username" column="USERNAME" />
        <result property="userType" column="USER_TYPE" />
        <result property="userStatus" column="USER_STATUS" />
        <result property="expiredTime" column="EXPIRED_TIME" />
        <result property="changePwdTime" column="EXPIRED_TIME" />
        <result property="nickname" column="NICKNAME" />
        <result property="email" column="EMAIL" />
        <result property="gender" column="GENDER" />
        <result property="signature" column="SIGNATURE" />
        <result property="website" column="WEBSITE" />
        <result property="headImgUrl" column="HEAD_IMG_URL" />
        <result property="lastLoginTime" column="LAST_LOGIN_TIME" />
        <result property="loginChan" column="LOGIN_CHAN" />
        <result property="loginType" column="LOGIN_TYPE" />
        <result property="loginAddress" column="LOGIN_ADDRESS" />
        <result property="userAgent" column="USER_AGENT" />
        <result property="createUsername" column="CREATE_USERNAME" />
        <result property="createTime" column="CREATE_TIME" />
        <result property="updateUsername" column="UPDATE_USERNAME" />
        <result property="updateTime" column="UPDATE_TIME" />
        <collection property="roleIds" ofType="Long">
            <result column="ROLE_ID" />
        </collection>
        <collection property="roleNames" ofType="String">
            <result column="ROLE_NAME" />
        </collection>
    </resultMap>

    <select id="selectUserById" resultType="com.github.stazxr.zblog.base.domain.entity.User">
        SELECT * FROM user WHERE ID = #{userId} AND DELETED = 0
    </select>

    <select id="selectUserByUsername" resultType="com.github.stazxr.zblog.base.domain.entity.User">
        SELECT * FROM user WHERE USERNAME = #{username} AND DELETED = 0
    </select>

    <select id="selectRolesByUserId" resultType="com.github.stazxr.zblog.base.domain.entity.Role">
        SELECT * FROM role WHERE DELETED = 0 AND ID IN (
            SELECT ROLE_ID FROM user_role_relation WHERE USER_ID = #{userId}
        )
    </select>

    <select id="selectAllMd5PermCodes" resultType="java.lang.String">
        SELECT DISTINCT MD5(RESOURCE_CODE) FROM resource WHERE RESOURCE_CODE IS NOT NULL
    </select>

    <select id="selectMd5PermCodesByUserId" resultType="java.lang.String">
        SELECT MD5(PERM_CODE) FROM permission WHERE DELETED = 0 AND ENABLED = 1 AND PERM_CODE IS NOT NULL AND (
            PERM_LEVEL IN (1, 2) OR ID IN (
                SELECT PERM_ID FROM role_permission_relation WHERE ROLE_ID IN (
                    SELECT ID FROM role WHERE DELETED = 0 AND ENABLED = 1 AND ID IN (
                        SELECT ROLE_ID FROM user_role_relation WHERE USER_ID = #{userId}
                    )
                )
            )
        )
        UNION ALL
        SELECT DISTINCT MD5(RESOURCE_CODE) FROM resource WHERE RESOURCE_LEVEL IN (1, 2) AND RESOURCE_CODE NOT IN (
            SELECT PERM_CODE FROM permission WHERE DELETED = 0 AND PERM_CODE IS NOT NULL
        )
    </select>

    <update id="updateUserLoginTime">
        UPDATE user
        <set>
            <if test="loginTime != null and loginTime != ''">
                LAST_LOGIN_TIME = #{loginTime},
            </if>
            LOGIN_ERROR_COUNT =
            <choose>
                <when test="errorCount != null">
                    #{errorCount}
                </when>
                <otherwise>
                    LOGIN_ERROR_COUNT + 1
                </otherwise>
            </choose>
        </set>
        WHERE ID = #{userId}
    </update>

    <select id="selectUserLoginErrorCount" resultType="java.lang.Integer">
        SELECT LOGIN_ERROR_COUNT FROM user WHERE ID = #{userId}
    </select>

    <update id="updateUserStatus">
        UPDATE user SET USER_STATUS = #{status} WHERE ID = #{userId}
    </update>

    <select id="selectUserList" resultType="com.github.stazxr.zblog.base.domain.vo.UserVo">
        SELECT
            u.ID, u.USERNAME, u.USER_TYPE, u.USER_STATUS, u.LAST_LOGIN_TIME, u.CREATE_TIME,
            u.NICKNAME, u.EMAIL, u.HEAD_IMG_URL, u.GENDER,
            ull.LOGIN_TYPE, ull.LOGIN_CHAN, ull.LOGIN_ADDRESS, ull.USER_AGENT
        FROM user u
        LEFT JOIN user_login_log ull ON ull.USER_ID = u.ID AND ull.LOGIN_TIME = u.LAST_LOGIN_TIME AND ull.IS_SUCCESS = 1
        WHERE u.DELETED = 0
        <if test="username != null and username != ''">
            <bind name="usernameBind" value="'%' + username + '%'"/>
            AND u.USERNAME LIKE #{usernameBind}
        </if>
        <if test="nickname != null and nickname != ''">
            <bind name="nicknameBind" value="'%' + nickname + '%'"/>
            AND u.NICKNAME LIKE #{nicknameBind}
        </if>
        <if test="email != null and email != ''">
            <bind name="emailBind" value="'%' + email + '%'"/>
            AND u.EMAIL LIKE #{emailBind}
        </if>
        <if test="userType != null">
            AND u.USER_TYPE = #{userType}
        </if>
        <if test="userStatus != null">
            AND u.USER_STATUS = #{userStatus}
        </if>
        <if test="loginChan != null and loginChan != ''">
            AND ull.LOGIN_CHAN = #{loginChan}
        </if>
        <if test="loginType != null and loginType != ''">
            AND ull.LOGIN_TYPE = #{loginType}
        </if>
        <if test="loginAddress != null and loginAddress != ''">
            <bind name="loginAddressBind" value="'%' + loginAddress + '%'"/>
            AND ull.LOGIN_ADDRESS LIKE #{loginAddressBind}
        </if>
        ORDER BY u.LAST_LOGIN_TIME DESC
    </select>

    <select id="selectUserDetail" resultMap="userVoDetailMap">
        SELECT
            u.ID, u.USERNAME, u.USER_TYPE, u.USER_STATUS, u.EXPIRED_TIME, u.CHANGE_PWD_TIME,
            u.NICKNAME, u.EMAIL, u.GENDER, u.SIGNATURE, u.WEBSITE, u.HEAD_IMG_URL,
            u.LAST_LOGIN_TIME, ull.LOGIN_TYPE, ull.LOGIN_CHAN, ull.LOGIN_ADDRESS, ull.USER_AGENT,
            ur.ROLE_ID, r.ROLE_NAME, u.CREATE_TIME, u.UPDATE_TIME,
            (SELECT USERNAME FROM user u WHERE u.ID = u.CREATE_USER) AS CREATE_USERNAME,
            (SELECT USERNAME FROM user u WHERE u.ID = u.UPDATE_USER) AS UPDATE_USERNAME
        FROM user u
        LEFT JOIN user_login_log ull ON ull.USER_ID = u.ID AND ull.LOGIN_TIME = u.LAST_LOGIN_TIME AND ull.IS_SUCCESS = 1
        LEFT JOIN (
            SELECT USER_ID, ROLE_ID FROM user_role_relation
        ) ur ON ur.USER_ID = u.ID
        LEFT JOIN role r ON r.ID = ur.ROLE_ID
        WHERE u.ID = #{userId}
    </select>























    <select id="selectUserRoleIdList" resultType="java.lang.Long">
        SELECT urr.ROLE_ID FROM user_role_relation urr WHERE urr.USER_ID = #{ID}
    </select>





    <select id="selectByEmail" resultType="com.github.stazxr.zblog.base.domain.entity.User">
        SELECT * FROM user WHERE EMAIL = #{email} AND DELETED = 0
    </select>

    <select id="selectByNickname" resultType="com.github.stazxr.zblog.base.domain.entity.User">
        SELECT * FROM user WHERE NICKNAME = #{nickname} AND DELETED = 0
    </select>

    <select id="selectLoginUserByUsernameOrEmail" resultType="com.github.stazxr.zblog.base.domain.entity.User">
        SELECT
            ID, NICKNAME, HEAD_IMG_URL, GENDER, WEBSITE, SIGNATURE, EMAIL, `PASSWORD`
        FROM user
        WHERE DELETED = 0
        <if test="isEmail == true">
            AND EMAIL = #{username}
        </if>
        <if test="isEmail == false">
            AND USERNAME = #{username}
        </if>
    </select>
</mapper>
